name: Deploy code to Pantheon
on:
  release:
    types: [published]
  push:
    branches:
      - main
    tags:
      - staging.*
env:
  php_version: '8.1'
  pantheon_repo: '${{ secrets.PANTHEON_REPO }}'
  pantheon_site_name: '${{ secrets.PANTHEON_SITE_NAME }}'
jobs:
  debug:
    name: Debug
    runs-on: ubuntu-latest
    timeout-minutes: 15
    steps:
      - name: Print variable
        run: |
          echo ${{ github.ref_name }}
          echo ${{ github.event.release.name }}
  build:
    name: Deploy
    runs-on: ubuntu-latest
    steps:
    - name: Checkout repository
      uses: actions/checkout@5a4ac9002d0be2fb38bd78e4b4dbde5606d7042f # v2.3.4

    - name: Setup PHP
      uses: shivammathur/setup-php@c0c6e403b6c6c44657450627093edddf3b905c5b # 2.9.0
      env:
        COMPOSER_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        php-version: ${{ env.php_version }}

    - name: Validate composer.json and composer.lock
      run: composer validate --strict

    - name: Get Composer cache directory
      id: composer-cache-dir
      run: echo "::set-output name=dir::$(composer config cache-files-dir)"

    - name: Composer install
      run: composer install --no-dev --no-interaction --no-progress

    - name: Place SSH key
      uses: shimataro/ssh-key-action@6f350ca8484d8d55c2e361e74d17e638dabe713a # v2.1.0
      with:
        key: ${{ secrets.PANTHEON_SSH_KEY }}
        known_hosts: ${{ secrets.KNOWN_HOSTS }}

    - name: Install Terminus
      # We use cgr to avoid dependency conflicts
      run: |
        composer global require consolidation/cgr:^2.0.5
        cgr pantheon-systems/terminus:^2.6.1
        terminus auth:login --machine-token=${{ secrets.PANTHEON_MACHINE_TOKEN }}
    - name: Deploy to Pantheon
      run: | 
        if [[ ${{ github.ref }} == 'refs/heads/main' ]]; then
          git remote add pantheon $pantheon_repo
          git push pantheon HEAD:master -f
          commit_message=$(git log -1 --pretty=%B)
        elif [[ ${{ github.ref }} == 'refs/tags/staging'* ]]; then
          git remote add pantheon $pantheon_repo
          git push pantheon HEAD:master -f
          commit_message=$(git log -1 --pretty=%B)
          terminus env:deploy $pantheon_site_name.test --note="Automated deploy: $commit_message"
        elif [[ ${{ github.ref }} == 'refs/tags/release'* ]]; then
          terminus env:deploy $pantheon_site_name.live --note="Automated deploy: $commit_message"
        fi